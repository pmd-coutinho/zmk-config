#undef ZMK_LEADER_SEQUENCE
#define ZMK_LEADER_SEQUENCE(name, leader_bindings, leader_sequence) \
    / { \
        behaviors { \
            leader: leader { \
                compatible = "zmk,behavior-leader-key"; \
                #binding-cells = <0>; \
                ignore-keys = <LSHFT RSHFT>; \
                leader_sequence_ ## name { \
                    bindings = <leader_bindings>; \
                    sequence = <leader_sequence>; \
                }; \
            }; \
        }; \
    };

/* Portuguese letters */

ZMK_LEADER_SEQUENCE(pt_a_grave,     &pt_a_grave,        A G)  // à/À
ZMK_LEADER_SEQUENCE(pt_a_circumflex, &pt_a_circumflex,   A C)  // â/Â
ZMK_LEADER_SEQUENCE(pt_c_cedilla,   &pt_c_cedilla,      C C)  // ç/Ç
ZMK_LEADER_SEQUENCE(pt_e_grave,     &pt_e_grave,        E G)  // è/È
ZMK_LEADER_SEQUENCE(pt_e_acute,     &pt_e_acute,        E A)  // é/É
ZMK_LEADER_SEQUENCE(pt_e_circumflex, &pt_e_circumflex,   E C)  // ê/Ê
ZMK_LEADER_SEQUENCE(pt_o_circumflex, &pt_o_circumflex,   O C)  // ô/Ô
ZMK_LEADER_SEQUENCE(pt_oa,          &pt_oa,             O A)  // ó/Ó
ZMK_LEADER_SEQUENCE(pt_u_grave,     &pt_u_grave,        U G)  // ù/Ù
ZMK_LEADER_SEQUENCE(pt_u_circumflex, &pt_u_circumflex,   U C)  // û/Û
ZMK_LEADER_SEQUENCE(pt_a_tilde,     &pt_a_tilde,        A T)  // ã/Ã
ZMK_LEADER_SEQUENCE(pt_aa,          &pt_aa,             A A)  // á/Á

/* Currency */
ZMK_LEADER_SEQUENCE(curr_pound, &curr_pound, G B P)
ZMK_LEADER_SEQUENCE(curr_euro, &curr_euro, E U R)
ZMK_LEADER_SEQUENCE(curr_dollar, &curr_dollar, U S D)

// BLE and USB
#ifdef CONFIG_WIRELESS
ZMK_LEADER_SEQUENCE(usb,        &out OUT_USB,   U S B)
ZMK_LEADER_SEQUENCE(ble,        &out OUT_BLE,   B L E)
#endif // CONFIG_WIRELESS
ZMK_LEADER_SEQUENCE(reset,      &sys_reset,     R E S E T)
ZMK_LEADER_SEQUENCE(boot,       &bootloader,    B O O T)